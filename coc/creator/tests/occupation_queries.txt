# occupations

## Retrieve all occupations but obtain only the uuid for each one of them.

query{
  allOccupations{
    edges{
      node{
        uuid
      }
    }
  }
}


## Retrieve one occupation by the node uuid

query{
  allOccupations(uuid:"c441e9fe-5fb6-4c4f-8a33-cb473d731218"){
    edges{
      node{
        title,
        description,
        suggestedContacts,
        creditRatingMin,
        creditRatingMax,
        id,
        user{
          id,
          username
        }
      }
    }
  }
}

## Search occupation by node id
> Notice the id we have for the elements is different to the id the node has
> this is because the node model wraps around our model given that we use
> relays, maybe in the future this will be different.

query{
  occupation(id:"T2NjdXBhdGlvbk5vZGU6Mg=="){
    uuid,
    title,
    description,
    suggestedContacts,
    creditRatingMin,
    creditRatingMax,
    user{
      id,
      username
    }
  }
}

## Create a occupation test

mutation{
  occupationMutate(
    input:{
      method: "CREATE",
      title:"test-occuation-create",
      user:1,
      description:"Created occupation",
      suggestedContacts:"test",
      creditRatingMin:20,
      creditRatingMax:40
    }){
    occupation{
      uuid,
      title,
      description,
      suggestedContacts,
      creditRatingMin,
      creditRatingMax
    }
  }
}

## Edit occupation
> In this scenario we need the uuid to find the occupation we want to update
> and we pass the new title that we want to have at our occupation

mutation{
  occupationMutate(
    input:{
      method: "UPDATE",
      uuid: "83e4e716-a923-4377-9d28-1fe11744657b",
      user: 1,
      title: "Test-2",
      description: "Update test",
      suggestedContacts: "test, test2",
      creditRatingMin: 10,
      creditRatingMax: 15
  }){
    occupation{
      uuid,
      title,
      description,
      suggestedContacts,
      creditRatingMin,
      creditRatingMax,
      user{
        id,
        username
      }
    }
  }
}

## Delete a occupation
> In this scenario we pass the method which is DEL that stands for DELETE
> we need to pass the uuid as well so the occupation can be find and later deleted.

mutation{
  occupationMutate(
    input:{
      method: "DELETE",
      uuid: "83e4e716-a923-4377-9d28-1fe11744657b",
      user: 1
    }){
    occupation{
      uuid,
      title,
      description,
      suggestedContacts,
      creditRatingMin,
      creditRatingMax
    }
  }
}
