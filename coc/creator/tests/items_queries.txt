# Items

## Retrieve all items but obtain only the price for each one of them.

query{
  allItems{
    edges{
      node{
        uuid
      }
    }
  }
}


## Retrieve one item by the node uuid

query{
  allItems(uuid:"db9c244b-82c5-4cf5-a53d-74ba560b839f"){
    edges{
      node{
        title,
        price,
        description,
        itemType,
        id,
      }
    }
  }
}

## Search item by node id
> Notice the id we have for the elements is different to the id the node has
> this is because the node model wraps around our model given that we use 
> relays, maybe in the future this will be different.

query{
  item(id: "SXRlbU5vZGU6NTA2"){
    uuid,
    title,
    price,
    description,
    itemType
  }
}

## Create a item test

mutation{
  newItem(input: {title: "test-item-create", itemType: 2, description: "Created item", price: 25.6}){
    item{
      uuid,
      title,
      itemType,
      description,
      price
      }
  }
}

## Edit item
> In this scenario we need the uuid to find the item we want to update
> and we pass the new title that we want to have at our item

mutation{
  updateDeleteItem(
      input: {
        uuid: "db9c244b-82c5-4cf5-a53d-74ba560b839f",
        title: "Test-2",
        description: "Update",
        itemType:4,
        price:5
      }){
    item{
      uuid,
      title,
      itemType,
      description,
      price
    }
  }
}


## Delete a item
> In this scenario we pass the method which is DEL that stands for DELETE
> we need to pass the uuid as well so the item can be find and later deleted.
mutation{
  updateDeleteItem(
      input: {
        uuid: "fe9c0263-3be1-419f-a9d2-594177fbb3b4",
        method: "DEL"
      }){
    item{
      uuid,
      title,
      itemType,
      description,
      price
    }
  }
}


